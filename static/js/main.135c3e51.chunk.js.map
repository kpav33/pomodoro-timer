{"version":3,"sources":["container/Context.js","components/Title.js","components/IncrementButton.js","components/DecrementButton.js","components/BreakSessionControl.js","components/Clock.js","components/StartStopResetButtons.js","components/PomodoroTimer.js","container/App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","state","setState","breakLength","setBreakLength","sessionLength","setSessionLength","minutes","setMinutes","seconds","setSeconds","playPauseButton","setPlayPauseButton","audioRef","useRef","play","setPlay","current","load","playPromise","undefined","then","catch","err","console","log","updateTime","useEffect","token","setTimeout","clearTimeout","Provider","value","audioSrc","Title","className","IncrementButton","buttonId","setLength","stateValue","useContext","id","onClick","prevState","DecrementButton","BreakSessionControl","Clock","StartStopResetButtons","pause","currentTime","PomodoroTimer","preload","src","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.135c3e51.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider({ children }) {\n  // Session or break\n  const [state, setState] = useState(\"session\");\n\n  // Break state\n  const [breakLength, setBreakLength] = useState(5);\n\n  // Session state\n  const [sessionLength, setSessionLength] = useState(25);\n\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n\n  // Play/Pause button\n  const [playPauseButton, setPlayPauseButton] = useState(false);\n\n  // Audio\n  const audioRef = useRef();\n\n  // Play sound, added to fix audio bug of playing sound on one minute mark\n  const [play, setPlay] = useState(false);\n\n  let audioSrc =\n    \"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\";\n\n  if (minutes === 0 && seconds === 0 && play) {\n    audioRef.current.load();\n    const playPromise = audioRef.current.play();\n    if (playPromise !== undefined) {\n      playPromise.then(() => {}).catch((err) => console.log(err));\n    }\n  }\n\n  // Timer\n  function updateTime() {\n    // Fix bug of playing audio at one minute mark, search for better solution\n    if (minutes === 0) {\n      setPlay(true);\n    }\n    if (minutes === 0 && seconds === 0) {\n      //reset\n      if (state === \"session\") {\n        // Tests don't pass with the commented out code in place\n        // alert(\"Session over! Continue?\");\n        setState(\"break\");\n        setSeconds(0);\n        setMinutes(breakLength);\n        setPlay(false);\n        // setPlayPauseButton(false);\n      } else {\n        // Tests don't pass with the commented out code in place\n        // alert(\"Break over! Continue?\");\n        setState(\"session\");\n        setSeconds(0);\n        setMinutes(sessionLength);\n        setPlay(false);\n        // setPlayPauseButton(false);\n      }\n    } else {\n      if (seconds === 0) {\n        setMinutes((minutes) => minutes - 1);\n        setSeconds(59);\n      } else {\n        setSeconds((seconds) => seconds - 1);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (playPauseButton) {\n      const token = setTimeout(updateTime, 1000);\n\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n\n  return (\n    <Context.Provider\n      value={{\n        breakLength,\n        setBreakLength,\n        sessionLength,\n        setSessionLength,\n        seconds,\n        setSeconds,\n        playPauseButton,\n        setPlayPauseButton,\n        minutes,\n        setMinutes,\n        state,\n        setState,\n        audioSrc,\n        audioRef,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport { Context, ContextProvider };\n","import React from \"react\";\n\nfunction Title() {\n  return (\n    <div className=\"title\">\n      <h1>25 + 5 Clock</h1>\n    </div>\n  );\n}\n\nexport default Title;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../container/Context\";\n\nimport { FaArrowUp } from \"react-icons/fa\";\n\nfunction IncrementButton({ buttonId, setLength, stateValue }) {\n  const { playPauseButton, setMinutes } = useContext(Context);\n\n  return (\n    <button\n      className=\"arrow\"\n      id={buttonId}\n      onClick={() => {\n        if (playPauseButton === false) {\n          setLength((prevState) => {\n            if (prevState < 60) {\n              return prevState + 1;\n            } else {\n              return prevState;\n            }\n          });\n        }\n        if (stateValue && playPauseButton === false) {\n          setMinutes((prevState) => {\n            if (prevState < 60) {\n              return prevState + 1;\n            } else {\n              return prevState;\n            }\n          });\n        }\n      }}\n    >\n      <FaArrowUp />\n    </button>\n  );\n}\n\nexport default IncrementButton;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../container/Context\";\n\nimport { FaArrowDown } from \"react-icons/fa\";\n\nfunction DecrementButton({ buttonId, setLength, stateValue }) {\n  const { playPauseButton, setMinutes } = useContext(Context);\n\n  return (\n    <button\n      className=\"arrow\"\n      id={buttonId}\n      onClick={() => {\n        if (playPauseButton === false) {\n          setLength((prevState) => {\n            if (prevState > 1) {\n              return prevState - 1;\n            } else {\n              return 1;\n            }\n          });\n        }\n        if (stateValue && playPauseButton === false) {\n          setMinutes((prevState) => {\n            if (prevState > 1) {\n              return prevState - 1;\n            } else {\n              return 1;\n            }\n          });\n        }\n      }}\n    >\n      <FaArrowDown />\n    </button>\n  );\n}\n\nexport default DecrementButton;\n","import React, { useContext } from \"react\";\n\nimport { Context } from \"../container/Context\";\n\nimport IncrementButton from \"./IncrementButton\";\nimport DecrementButton from \"./DecrementButton\";\n\nfunction BreakSessionControl() {\n  const {\n    breakLength,\n    setBreakLength,\n    sessionLength,\n    setSessionLength,\n    state,\n  } = useContext(Context);\n\n  return (\n    <div className=\"buttons\">\n      <div id=\"break-label\" className=\"label\">\n        <h4>Break Length</h4>\n        <div className=\"breaks\">\n          <DecrementButton\n            buttonId=\"break-decrement\"\n            setLength={setBreakLength}\n            stateValue={state === \"break\"}\n          />\n          <span id=\"break-length\">{breakLength}</span>\n          <IncrementButton\n            buttonId=\"break-increment\"\n            setLength={setBreakLength}\n            stateValue={state === \"break\"}\n          />\n        </div>\n      </div>\n      <div id=\"session-label\" className=\"label\">\n        <h4>Session Length</h4>\n        <div className=\"sessions\">\n          <DecrementButton\n            buttonId=\"session-decrement\"\n            setLength={setSessionLength}\n            stateValue={state === \"session\"}\n          />\n          <span id=\"session-length\">{sessionLength}</span>\n          <IncrementButton\n            buttonId=\"session-increment\"\n            setLength={setSessionLength}\n            stateValue={state === \"session\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BreakSessionControl;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../container/Context\";\n\nfunction Clock() {\n  const { state, minutes, seconds } = useContext(Context);\n\n  return (\n    <div className=\"clock\">\n      <div id=\"timer-label\">{state === \"session\" ? \"Session\" : \"Break\"}</div>\n      <div id=\"time-left\">\n        {/* If minutes or seconds are less than 10 add a leading 0 to it*/}\n        {`${minutes < 10 ? \"0\" + minutes : minutes}:${\n          seconds < 10 ? \"0\" + seconds : seconds\n        }`}\n      </div>\n    </div>\n  );\n}\n\nexport default Clock;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../container/Context\";\n\nimport { FaPlay } from \"react-icons/fa\";\nimport { FaPause } from \"react-icons/fa\";\nimport { FiRefreshCw } from \"react-icons/fi\";\n\nfunction StartStopResetButtons() {\n  const {\n    playPauseButton,\n    setPlayPauseButton,\n    audioRef,\n    setMinutes,\n    setSeconds,\n    setSessionLength,\n    setBreakLength,\n    setState,\n  } = useContext(Context);\n\n  return (\n    <div className=\"controlButtons\">\n      <div id=\"test\">\n        {!playPauseButton ? (\n          <div id=\"start_stop\" onClick={() => setPlayPauseButton(true)}>\n            <FaPlay />\n          </div>\n        ) : (\n          <div id=\"start_stop\" onClick={() => setPlayPauseButton(false)}>\n            <FaPause />\n          </div>\n        )}\n      </div>\n      <div\n        id=\"reset\"\n        onClick={() => {\n          audioRef.current.pause();\n          audioRef.current.currentTime = 0;\n          setPlayPauseButton(false);\n          setMinutes(25);\n          setSeconds(0);\n          setSessionLength(25);\n          setBreakLength(5);\n          setState(\"session\");\n        }}\n      >\n        <FiRefreshCw />\n      </div>\n    </div>\n  );\n}\n\nexport default StartStopResetButtons;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../container/Context\";\n\nimport BreakSessionControl from \"./BreakSessionControl\";\nimport Clock from \"./Clock\";\nimport StartStopResetButtons from \"./StartStopResetButtons\";\n\nfunction PomodoroTimer() {\n  const { audioSrc, audioRef } = useContext(Context);\n\n  return (\n    <div className=\"pomodoroTimer\">\n      <BreakSessionControl />\n      <Clock />\n      <StartStopResetButtons />\n      <audio\n        id=\"beep\"\n        preload=\"auto\"\n        src={audioSrc}\n        className=\"clip\"\n        ref={audioRef}\n      />\n    </div>\n  );\n}\n\nexport default PomodoroTimer;\n","import \"../styles.scss\";\nimport React from \"react\";\n\nimport Title from \"../components/Title\";\nimport PomodoroTimer from \"../components/PomodoroTimer\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"panel\">\n        <Title />\n        <PomodoroTimer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { ContextProvider } from \"./container/Context\";\nimport App from \"./container/App\";\n\nReactDOM.render(\n  <ContextProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}