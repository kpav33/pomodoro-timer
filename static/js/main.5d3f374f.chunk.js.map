{"version":3,"sources":["container/Context.js","components/Title.js","components/Buttons.js","components/PomodoroTimer.js","container/App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","state","setState","breakLength","setBreakLength","sessionLength","setSessionLength","minutes","setMinutes","seconds","setSeconds","playPauseButton","setPlayPauseButton","audioRef","useRef","play","setPlay","console","log","current","load","playPromise","undefined","then","catch","err","updateTime","useEffect","token","setTimeout","clearTimeout","Provider","value","audioSrc","Title","className","Buttons","useContext","id","onClick","prevState","PomodoroTimer","pause","currentTime","preload","src","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d3f374f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider({ children }) {\n  // Session or break\n  const [state, setState] = useState(\"session\");\n\n  // Break state\n  const [breakLength, setBreakLength] = useState(5);\n\n  // Session state\n  const [sessionLength, setSessionLength] = useState(25);\n\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n\n  // Play/Pause button\n  const [playPauseButton, setPlayPauseButton] = useState(false);\n\n  // Audio\n  const audioRef = useRef();\n\n  // Play sound, added to fix audio bug of playing sound on one minute mark\n  const [play, setPlay] = useState(false);\n\n  let audioSrc =\n    \"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\";\n\n  console.log(minutes, seconds);\n  if (minutes === 0 && seconds === 0 && play) {\n    audioRef.current.load();\n    const playPromise = audioRef.current.play();\n    if (playPromise !== undefined) {\n      playPromise.then(() => {}).catch((err) => console.log(err));\n      console.log(\"PLAY SOUND\");\n    }\n  }\n\n  // Timer\n  function updateTime() {\n    // Fix bug of playing audio at one minute mark, search for better solution\n    if (minutes === 0) {\n      setPlay(true);\n    }\n    if (minutes === 0 && seconds === 0) {\n      //reset\n      if (state === \"session\") {\n        // Tests don't pass with the commented out code in place\n        // alert(\"Session over! Continue?\");\n        setState(\"break\");\n        setSeconds(0);\n        setMinutes(breakLength);\n        setPlay(false);\n        // setPlayPauseButton(false);\n      } else {\n        // Tests don't pass with the commented out code in place\n        // alert(\"Break over! Continue?\");\n        setState(\"session\");\n        setSeconds(0);\n        setMinutes(sessionLength);\n        setPlay(false);\n        // setPlayPauseButton(false);\n      }\n    } else {\n      if (seconds === 0) {\n        setMinutes((minutes) => minutes - 1);\n        setSeconds(59);\n      } else {\n        setSeconds((seconds) => seconds - 1);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (playPauseButton) {\n      const token = setTimeout(updateTime, 1000);\n\n      return function cleanUp() {\n        clearTimeout(token);\n      };\n    }\n  });\n\n  return (\n    <Context.Provider\n      value={{\n        breakLength,\n        setBreakLength,\n        sessionLength,\n        setSessionLength,\n        seconds,\n        setSeconds,\n        playPauseButton,\n        setPlayPauseButton,\n        minutes,\n        setMinutes,\n        state,\n        setState,\n        audioSrc,\n        audioRef,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport { Context, ContextProvider };\n","import React from \"react\";\n\nfunction Title() {\n  return (\n    <div className=\"title\">\n      <h1>25 + 5 Clock</h1>\n    </div>\n  );\n}\n\nexport default Title;\n","import React, { useContext } from \"react\";\n\nimport { Context } from \"../container/Context\";\n\nimport { FaArrowUp } from \"react-icons/fa\";\nimport { FaArrowDown } from \"react-icons/fa\";\n\nfunction Buttons() {\n  const {\n    breakLength,\n    setBreakLength,\n    sessionLength,\n    setSessionLength,\n    setMinutes,\n    state,\n    playPauseButton,\n  } = useContext(Context);\n\n  return (\n    <div className=\"buttons\">\n      <div id=\"break-label\" className=\"label\">\n        <h4>Break Length</h4>\n        <div className=\"breaks\">\n          <button\n            className=\"arrow\"\n            id=\"break-decrement\"\n            onClick={() => {\n              if (playPauseButton === false) {\n                setBreakLength((prevState) => {\n                  if (prevState > 1) {\n                    return prevState - 1;\n                  } else {\n                    return 1;\n                  }\n                });\n              }\n              if (state === \"break\" && playPauseButton === false) {\n                setMinutes((prevState) => {\n                  if (prevState > 1) {\n                    return prevState - 1;\n                  } else {\n                    return 1;\n                  }\n                });\n              }\n            }}\n          >\n            <FaArrowDown />\n          </button>\n          <span id=\"break-length\">{breakLength}</span>\n          <button\n            className=\"arrow\"\n            id=\"break-increment\"\n            onClick={() => {\n              if (playPauseButton === false) {\n                setBreakLength((prevState) => {\n                  if (prevState < 60) {\n                    return prevState + 1;\n                  } else {\n                    return prevState;\n                  }\n                });\n              }\n              if (state === \"break\" && playPauseButton === false) {\n                setMinutes((prevState) => {\n                  if (prevState < 60) {\n                    return prevState + 1;\n                  } else {\n                    return prevState;\n                  }\n                });\n              }\n            }}\n          >\n            <FaArrowUp />\n          </button>\n        </div>\n      </div>\n      <div id=\"session-label\" className=\"label\">\n        <h4>Session Length</h4>\n        <div className=\"sessions\">\n          <button\n            className=\"arrow\"\n            id=\"session-decrement\"\n            onClick={() => {\n              if (playPauseButton === false) {\n                setSessionLength((prevState) => {\n                  if (prevState > 1) {\n                    return prevState - 1;\n                  } else {\n                    return 1;\n                  }\n                });\n              }\n              if (state === \"session\" && playPauseButton === false) {\n                setMinutes((prevState) => {\n                  if (prevState > 1) {\n                    return prevState - 1;\n                  } else {\n                    return 1;\n                  }\n                });\n              }\n            }}\n          >\n            <FaArrowDown />\n          </button>\n          <span id=\"session-length\">{sessionLength}</span>\n          <button\n            className=\"arrow\"\n            id=\"session-increment\"\n            onClick={() => {\n              if (playPauseButton === false) {\n                setSessionLength((prevState) => {\n                  if (prevState < 60) {\n                    return prevState + 1;\n                  } else {\n                    return prevState;\n                  }\n                });\n              }\n              if (state === \"session\" && playPauseButton === false) {\n                setMinutes((prevState) => {\n                  if (prevState < 60) {\n                    return prevState + 1;\n                  } else {\n                    return prevState;\n                  }\n                });\n              }\n            }}\n          >\n            <FaArrowUp />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../container/Context\";\n\nimport Buttons from \"./Buttons\";\nimport { FaPlay } from \"react-icons/fa\";\nimport { FaPause } from \"react-icons/fa\";\nimport { FiRefreshCw } from \"react-icons/fi\";\n\nfunction PomodoroTimer() {\n  const {\n    setPlayPauseButton,\n    setSessionLength,\n    setBreakLength,\n    setSeconds,\n    seconds,\n    minutes,\n    setMinutes,\n    playPauseButton,\n    state,\n    setState,\n    audioSrc,\n    audioRef,\n  } = useContext(Context);\n\n  return (\n    <div className=\"pomodoroTimer\">\n      <Buttons />\n      <div className=\"clock\">\n        <div id=\"timer-label\">{state === \"session\" ? \"Session\" : \"Break\"}</div>\n        <div id=\"time-left\">\n          {/* If minutes or seconds are less than 10 add a leading 0 to it*/}\n          {`${minutes < 10 ? \"0\" + minutes : minutes}:${\n            seconds < 10 ? \"0\" + seconds : seconds\n          }`}\n        </div>\n      </div>\n      <div className=\"controlButtons\">\n        <div id=\"test\">\n          {!playPauseButton ? (\n            <div id=\"start_stop\" onClick={() => setPlayPauseButton(true)}>\n              <FaPlay />\n            </div>\n          ) : (\n            <div id=\"start_stop\" onClick={() => setPlayPauseButton(false)}>\n              <FaPause />\n            </div>\n          )}\n        </div>\n        <div\n          id=\"reset\"\n          onClick={() => {\n            audioRef.current.pause();\n            audioRef.current.currentTime = 0;\n            setPlayPauseButton(false);\n            setMinutes(25);\n            setSeconds(0);\n            setSessionLength(25);\n            setBreakLength(5);\n            setState(\"session\");\n          }}\n        >\n          <FiRefreshCw />\n        </div>\n      </div>\n      <audio\n        id=\"beep\"\n        preload=\"auto\"\n        src={audioSrc}\n        className=\"clip\"\n        ref={audioRef}\n      />\n    </div>\n  );\n}\n\nexport default PomodoroTimer;\n","import \"../styles.scss\";\nimport React from \"react\";\n\nimport Title from \"../components/Title\";\nimport PomodoroTimer from \"../components/PomodoroTimer\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"panel\">\n        <Title />\n        <PomodoroTimer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { ContextProvider } from \"./container/Context\";\nimport App from \"./container/App\";\n\nReactDOM.render(\n  <ContextProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}